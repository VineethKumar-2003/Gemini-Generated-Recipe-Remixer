2024-12-28T13:42:55.888Z - Server started on port 5000
2024-12-28T13:43:25.170Z - Received request: {"preferredCuisine":"South Indian","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T13:43:25.170Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Indian recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    - For Every Generation the recipe should be unique\n    "}]}]}
2024-12-28T13:44:38.705Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"hard","preparationTime":"30 - 180 minutes","mealType":"lunch","dietaryPreference":"non-veg"}
2024-12-28T13:44:38.707Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: hard\n    - Preparation Time: 30 - 180 minutes\n    - Meal Type: lunch\n    - Dietary Preference: non-veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    - For Every Generation the recipe should be unique\n    "}]}]}
2024-12-28T15:59:09.444Z - Server started on port 5000
2024-12-28T15:59:13.959Z - Received request: {"preferredCuisine":"South Indian","levelOfDifficulty":"hard","preparationTime":"30 - 180 minutes","mealType":"lunch","dietaryPreference":"non-veg"}
2024-12-28T15:59:13.963Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Indian recipes based on these preferences:\n    - Difficulty: hard\n    - Preparation Time: 30 - 180 minutes\n    - Meal Type: lunch\n    - Dietary Preference: non-veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    - For Every Generation the recipe should be unique\n    "}]}]}
2024-12-28T16:01:52.702Z - Server started on port 5000
2024-12-28T17:52:55.707Z - Server started on port 5000
2024-12-28T17:53:26.074Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"medium","preparationTime":"10 - 60 minutes","mealType":"dinner","dietaryPreference":"non-veg"}
2024-12-28T17:53:26.079Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: medium\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: dinner\n    - Dietary Preference: non-veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T17:53:28.237Z - Error fetching recipes: Request failed with status code 400
2024-12-28T17:53:33.418Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"medium","preparationTime":"10 - 60 minutes","mealType":"dinner","dietaryPreference":"non-veg"}
2024-12-28T17:53:33.420Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: medium\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: dinner\n    - Dietary Preference: non-veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T17:53:35.074Z - Error fetching recipes: Request failed with status code 400
2024-12-28T17:55:46.214Z - Received request: {"preferredCuisine":"South Indian","levelOfDifficulty":"medium","preparationTime":"30 - 60 minutes","mealType":"dinner","dietaryPreference":"non-veg"}
2024-12-28T17:55:46.215Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Indian recipes based on these preferences:\n    - Difficulty: medium\n    - Preparation Time: 30 - 60 minutes\n    - Meal Type: dinner\n    - Dietary Preference: non-veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T17:55:47.818Z - Error fetching recipes: Request failed with status code 400
2024-12-28T17:56:42.865Z - Received request: {"preferredCuisine":"South Indian","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T17:56:42.867Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Indian recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T17:56:44.429Z - Error fetching recipes: Request failed with status code 400
2024-12-28T17:57:40.366Z - Received request: {"preferredCuisine":"South Indian","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T17:57:40.367Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Indian recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T17:57:41.955Z - Error fetching recipes: Request failed with status code 400
2024-12-28T18:06:15.949Z - Server started on port 5000
2024-12-28T18:06:22.631Z - Received request: {"preferredCuisine":"South Indian","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T18:06:22.632Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Indian recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:06:24.417Z - Error fetching recipes: Request failed with status code 400
2024-12-28T18:07:01.523Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T18:07:01.525Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:07:03.185Z - Error fetching recipes: Request failed with status code 400
2024-12-28T18:09:15.398Z - Server started on port 5000
2024-12-28T18:09:20.807Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T18:09:20.808Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:09:22.737Z - Error fetching recipes: Request failed with status code 400
2024-12-28T18:12:37.244Z - Server started on port 5000
2024-12-28T18:12:42.974Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T18:12:42.982Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:12:44.319Z - Error fetching recipes: Request failed with status code 400
2024-12-28T18:12:44.320Z - Gemini API error response: {"error":{"code":400,"message":"API key not valid. Please pass a valid API key.","status":"INVALID_ARGUMENT","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"API_KEY_INVALID","domain":"googleapis.com","metadata":{"service":"generativelanguage.googleapis.com"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"API key not valid. Please pass a valid API key."}]}}
2024-12-28T18:13:11.212Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T18:13:11.214Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:13:12.852Z - Error fetching recipes: Request failed with status code 400
2024-12-28T18:13:12.853Z - Gemini API error response: {"error":{"code":400,"message":"API key not valid. Please pass a valid API key.","status":"INVALID_ARGUMENT","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"API_KEY_INVALID","domain":"googleapis.com","metadata":{"service":"generativelanguage.googleapis.com"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"API key not valid. Please pass a valid API key."}]}}
2024-12-28T18:14:18.181Z - Server started on port 5000
2024-12-28T18:14:22.928Z - Received request: {"preferredCuisine":"South Chennai","levelOfDifficulty":"Easy","preparationTime":"10 - 60 minutes","mealType":"Snack","dietaryPreference":"Non-Veg"}
2024-12-28T18:14:22.932Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate South Chennai recipes based on these preferences:\n    - Difficulty: Easy\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: Snack\n    - Dietary Preference: Non-Veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:14:30.288Z - Gemini API response: {"candidates":[{"content":{"parts":[{"text":"[\n  {\n    \"name\": \"Egg Bhurji\",\n    \"yields\": \"2 servings\",\n    \"preparationTime\": \"15 minutes\",\n    \"cookTime\": \"10 minutes\",\n    \"ingredients\": [\n      \"2 eggs\",\n      \"1 small onion, finely chopped\",\n      \"1 green chili, finely chopped\",\n      \"1 tomato, finely chopped\",\n      \"1/2 tsp turmeric powder\",\n      \"1/4 tsp red chili powder\",\n      \"Salt to taste\",\n      \"2 tbsp oil\",\n      \"Coriander leaves for garnish\"\n    ],\n    \"instructions\": [\n      \"Heat oil in a pan. Add onions and green chilies and saute until onions are translucent.\",\n      \"Add tomatoes and saute for a minute.\",\n      \"Whisk eggs with turmeric powder, red chili powder and salt.\",\n      \"Pour egg mixture into the pan and scramble until cooked.\",\n      \"Garnish with coriander leaves and serve hot with bread or dosa.\"\n    ]\n  },\n  {\n    \"name\": \"Chicken 65\",\n    \"yields\": \"4 servings\",\n    \"preparationTime\": \"30 minutes\",\n    \"cookTime\": \"20 minutes\",\n    \"ingredients\": [\n      \"250 gms chicken, cut into small pieces\",\n      \"1/2 cup yogurt\",\n      \"1 tbsp ginger-garlic paste\",\n      \"1 tsp red chili powder\",\n      \"1/2 tsp turmeric powder\",\n      \"1/4 tsp pepper powder\",\n      \"Salt to taste\",\n      \"2 tbsp oil\",\n      \"1/4 cup rice flour\",\n      \"1/4 cup corn flour\"\n\n    ],\n    \"instructions\": [\n      \"Marinate chicken with yogurt, ginger-garlic paste, red chili powder, turmeric powder, pepper powder and salt for at least 30 minutes.\",\n      \"Mix rice flour and corn flour.\",\n      \"Heat oil in a pan. Dip the marinated chicken in the flour mixture and deep fry until golden brown and crispy.\",\n      \"Serve hot as a snack.\"\n    ]\n  },\n  {\n    \"name\": \"Prawn Fry\",\n    \"yields\": \"3 servings\",\n    \"preparationTime\": \"20 minutes\",\n    \"cookTime\": \"15 minutes\",\n    \"ingredients\": [\n      \"250 gms prawns, cleaned and deveined\",\n      \"1 tbsp ginger-garlic paste\",\n      \"1/2 tsp turmeric powder\",\n      \"1/4 tsp red chili powder\",\n      \"Salt to taste\",\n      \"2 tbsp oil\",\n      \"Curry leaves\"\n    ],\n    \"instructions\":[\n      \"Marinate prawns with ginger-garlic paste, turmeric powder, red chili powder and salt for 15 minutes.\",\n      \"Heat oil in a pan. Add curry leaves and saute for a few seconds.\",\n      \"Add marinated prawns and fry until they turn pink and cooked through.\",\n      \"Serve hot.\"\n    ]\n  }\n]\n"}],"role":"model"},"finishReason":"STOP","avgLogprobs":-0.06271249871504934}],"usageMetadata":{"promptTokenCount":227,"candidatesTokenCount":665,"totalTokenCount":892},"modelVersion":"gemini-1.5-flash"}
2024-12-28T18:31:14.377Z - Server started on port 5000
2024-12-28T18:31:46.071Z - Received request: {"preferredCuisine":"Indian","levelOfDifficulty":"medium","preparationTime":"10 - 60 minutes","mealType":"dinner","dietaryPreference":"non-veg"}
2024-12-28T18:31:46.075Z - Sending request to Gemini API: {"contents":[{"parts":[{"text":"\n    Generate Indian recipes based on these preferences:\n    - Difficulty: medium\n    - Preparation Time: 10 - 60 minutes\n    - Meal Type: dinner\n    - Dietary Preference: non-veg\n\n    Return the response as a JSON array of recipes. Each recipe should have this exact structure:\n    [\n      {\n        \"name\": \"Recipe Name\",\n        \"yields\": \"Number of servings\",\n        \"preparationTime\": \"Preparation time\",\n        \"cookTime\": \"Cooking time\",\n        \"ingredients\": [\n          \"ingredient 1\",\n          \"ingredient 2\"\n        ],\n        \"instructions\": [\n          \"step 1\",\n          \"step 2\"\n        ]\n      }\n    ]\n\n    Important: \n    - Return ONLY the JSON array\n    - Do NOT include any markdown formatting or comments\n    - Do NOT wrap the response in quotes or code blocks\n    - Each field should be a simple string or array of strings\n    - Generate 3-5 recipes maximum\n    "}]}]}
2024-12-28T18:31:55.946Z - Gemini API response: {"candidates":[{"content":{"parts":[{"text":"[\n  {\n    \"name\": \"Chicken Tikka Masala\",\n    \"yields\": \"4 servings\",\n    \"preparationTime\": \"30 minutes\",\n    \"cookTime\": \"30 minutes\",\n    \"ingredients\": [\n      \"1.5 lbs boneless, skinless chicken thighs, cut into 1-inch pieces\",\n      \"1 cup plain yogurt\",\n      \"2 tbsp ginger-garlic paste\",\n      \"1 tbsp garam masala\",\n      \"1 tbsp paprika\",\n      \"1 tsp turmeric powder\",\n      \"1 tsp red chili powder\",\n      \"1 tsp salt\",\n      \"1/2 tsp black pepper\",\n      \"2 tbsp oil\",\n      \"1 large onion, chopped\",\n      \"1 (28 ounce) can crushed tomatoes\",\n      \"1 cup heavy cream\",\n      \"Fresh cilantro, for garnish\"\n    ],\n    \"instructions\": [\n      \"Marinate chicken in yogurt, ginger-garlic paste, garam masala, paprika, turmeric, chili powder, salt, and pepper for at least 30 minutes.\",\n      \"Heat oil in a large skillet or pot over medium-high heat. Add marinated chicken and cook until browned on all sides.\",\n      \"Add chopped onion and cook until softened, about 5 minutes.\",\n      \"Stir in crushed tomatoes and bring to a simmer. Reduce heat and cook for 15 minutes, or until sauce has thickened slightly.\",\n      \"Stir in heavy cream and cook for another 5 minutes.\",\n      \"Garnish with fresh cilantro and serve with rice or naan.\"\n    ]\n  },\n  {\n    \"name\": \"Goan Fish Curry\",\n    \"yields\": \"4 servings\",\n    \"preparationTime\": \"20 minutes\",\n    \"cookTime\": \"30 minutes\",\n    \"ingredients\": [\n      \"1 lb firm white fish fillets (cod, snapper, or halibut), cut into 1-inch pieces\",\n      \"1 large onion, finely chopped\",\n      \"2 tbsp ginger-garlic paste\",\n      \"2 green chilies, finely chopped\",\n      \"1 tsp turmeric powder\",\n      \"1 tsp red chili powder\",\n      \"1/2 tsp coriander powder\",\n      \"1/4 tsp cumin powder\",\n      \"1/4 tsp mustard seeds\",\n      \"1/4 tsp fenugreek seeds\",\n      \"1 (14.5 ounce) can diced tomatoes\",\n      \"1 cup coconut milk\",\n      \"2 tbsp oil\",\n      \"Salt to taste\",\n      \"Fresh cilantro, for garnish\"\n    ],\n    \"instructions\": [\n      \"Heat oil in a large skillet or pot over medium heat. Add mustard seeds and fenugreek seeds and let them splutter.\",\n      \"Add onions and saute until golden brown.\",\n      \"Add ginger-garlic paste and green chilies and saute for a minute.\",\n      \"Stir in turmeric powder, chili powder, coriander powder, and cumin powder. Saute for 30 seconds.\",\n      \"Add diced tomatoes and cook until softened.\",\n      \"Add fish pieces and coconut milk. Season with salt.\",\n      \"Bring to a simmer, cover, and cook for 10-15 minutes, or until fish is cooked through.\",\n      \"Garnish with fresh cilantro and serve with rice.\"\n    ]\n  },\n  {\n    \"name\": \"Lamb Rogan Josh\",\n    \"yields\": \"6 servings\",\n    \"preparationTime\": \"45 minutes\",\n    \"cookTime\": \"1 hour\",\n    \"ingredients\": [\n      \"1.5 lbs boneless lamb, cut into 1-inch cubes\",\n      \"1 large onion, finely chopped\",\n      \"2 tbsp ginger-garlic paste\",\n      \"1 tbsp garam masala\",\n      \"1 tsp turmeric powder\",\n      \"1 tsp red chili powder\",\n      \"1/2 tsp cumin powder\",\n      \"1/2 tsp coriander powder\",\n      \"1/4 cup yogurt\",\n      \"1 (14.5 ounce) can diced tomatoes\",\n      \"1 cup water\",\n      \"2 tbsp oil\",\n      \"Salt to taste\",\n      \"Fresh cilantro, for garnish\"\n    ],\n    \"instructions\": [\n      \"Marinate lamb in yogurt, ginger-garlic paste, garam masala, turmeric powder, chili powder, cumin powder, coriander powder, and salt for at least 30 minutes.\",\n      \"Heat oil in a large pot or Dutch oven over medium heat. Add chopped onion and saute until golden brown.\",\n      \"Add marinated lamb and cook until browned on all sides.\",\n      \"Stir in diced tomatoes and water. Bring to a boil, then reduce heat to low, cover, and simmer for 1 hour, or until lamb is tender.\",\n      \"Garnish with fresh cilantro and serve with rice or naan.\"\n    ]\n  }\n]\n"}],"role":"model"},"finishReason":"STOP","avgLogprobs":-0.04129982175420246}],"usageMetadata":{"promptTokenCount":226,"candidatesTokenCount":1055,"totalTokenCount":1281},"modelVersion":"gemini-1.5-flash"}
2024-12-28T18:34:17.474Z - Server started on port 5000
